matrix = [
    [0, 1, 1, 1],
    [1, 0, 0, 1],
    [1, 0, 0, 1],
    [1, 1, 1, 0]
]
start = 0
visit = [False]*4

def DFS(matrix, visit, curr):
    visit[curr] = True
    print(f"현재 {curr}정점 방문")

    for i in range(len(matrix[curr])):
        if visit[i] == False and matrix[curr][i] == 1:
            DFS(matrix, visit, i)
# DFS(matrix, visit, start)

from collections import deque

def BFS(matrix, start):
    visit[start] = True
    que = deque()
    que.append([0, start])
    while que:
        distance, curr = que.popleft()
        print(f"현재 {curr}정점 방문, {start}정점에서 부터의 거리{distance}")
        for i in range(len(matrix[curr])):
            if visit[i] == False and matrix[curr][i] == 1:
                que.append([distance+1, i])
                visit[i] = True

BFS(matrix, start)
