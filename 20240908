# 숙제 동영상 재생기,큰 수 만들기

# import numpy as np
#
# def perceptron_AND(x1, x2):
#     # AND 게이트의 가중치와 편향
#     w = np.array([0.5, 0.5]) # 가중치
#     b = -0.7                 # 편향
#
#     # 임력값과 가중치의 내적 + 편향
#     z = np.dot(np.array([x1, x2]), w) + b
#
#     # 출력: z > 0이면 1, 그렇지 않으면 0
#     return 1 if z > 0 else 0
# print(perceptron_AND(0,0))
# print(perceptron_AND(0,1))
# print(perceptron_AND(1,0))
# print(perceptron_AND(1,1))
#
# def perceptron_or(x1, x2):
#     # AND 게이트의 가중치와 편향
#     w = np.array([0.5, 0.5]) # 가중치
#     b = -0.2                 # 편향
#
#     # 임력값과 가중치의 내적 + 편향
#     z = np.dot(np.array([x1, x2]), w) + b
#
#     # 출력: z > 0이면 1, 그렇지 않으면 0
#     return 1 if z > 0 else 0
#
# print(perceptron_or(0,0))
# print(perceptron_or(0,1))
# print(perceptron_or(1,0))
# print(perceptron_or(1,1))
#
# def perceptron_not(x):
#     w = np.array([-1.0]) # 가중치
#     b = 0.5
#
#     # 임려값과 가중치의 내적 + 편향
#     z = np.dot(np.array([x]),w) + b
#
#     # 출력: z > 0이면 1, 그렇지 않으면 0
#     return 1 if z > 0 else 0
# print(perceptron_not(0))
# print(perceptron_not(1))
#
# def perceptron_xor(x1, x2):
#     h1 = perceptron_not(perceptron_AND(x1,x2))
#     h2 = perceptron_or(x1, x2)
#     ans = perceptron_AND(h1,h2)
#     return ans
def solution1(s):
    m,s = map(int,s.split(':'))
    return m * 60 + s
def test(s1):
    m = s1 // 60
    s = s1 % 60
    return f"{m:02}:{s:02}"

def solution(video_len, pos, op_start, op_end, commands):
    answer = ''
    return answer
print(solution("34:33","13:00","00:55","02:55",["next", "prev"]))
